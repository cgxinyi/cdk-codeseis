{
  "Resources": {
    "MyVpcF9F0CA6F": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/Resource"
      }
    },
    "MyVpcPublicSubnet1SubnetF6608456": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/Subnet"
      }
    },
    "MyVpcPublicSubnet1RouteTableC46AB2F4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/RouteTable"
      }
    },
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ],
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/DefaultRoute"
      }
    },
    "MyVpcPublicSubnet1EIP096967CB": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/EIP"
      }
    },
    "MyVpcPublicSubnet1NATGatewayAD3400C1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet1EIP096967CB",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet1/NATGateway"
      }
    },
    "MyVpcPublicSubnet2Subnet492B6BFB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/Subnet"
      }
    },
    "MyVpcPublicSubnet2RouteTable1DF17386": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/RouteTable"
      }
    },
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        },
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "MyVpcPublicSubnet2DefaultRoute052936F6": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "DependsOn": [
        "MyVpcVPCGW488ACE0D"
      ],
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/DefaultRoute"
      }
    },
    "MyVpcPublicSubnet2EIP8CCBA239": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/EIP"
      }
    },
    "MyVpcPublicSubnet2NATGateway91BFBEC9": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVpcPublicSubnet2EIP8CCBA239",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PublicSubnet2/NATGateway"
      }
    },
    "MyVpcPrivateSubnet1Subnet5057CF7E": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": "us-east-2a",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet1/Subnet"
      }
    },
    "MyVpcPrivateSubnet1RouteTable8819E6E2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet1/RouteTable"
      }
    },
    "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "MyVpcPrivateSubnet2Subnet0040C983": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "AvailabilityZone": "us-east-2b",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet2/Subnet"
      }
    },
    "MyVpcPrivateSubnet2RouteTableCEDCEECE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet2/RouteTable"
      }
    },
    "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        },
        "SubnetId": {
          "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "MyVpcPrivateSubnet2DefaultRoute9CE96294": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "MyVpcIGW5C4A4F63": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "SpringbootfagateStack/MyVpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/IGW"
      }
    },
    "MyVpcVPCGW488ACE0D": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        },
        "InternetGatewayId": {
          "Ref": "MyVpcIGW5C4A4F63"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyVpc/VPCGW"
      }
    },
    "MyCluster4C1BA579": {
      "Type": "AWS::ECS::Cluster",
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/MyCluster/Resource"
      }
    },
    "ServiceLBE9A1ADBC": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ServiceLBSecurityGroupF7435A5C",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "MyVpcPublicSubnet1SubnetF6608456"
          },
          {
            "Ref": "MyVpcPublicSubnet2Subnet492B6BFB"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
        "MyVpcPublicSubnet2DefaultRoute052936F6"
      ],
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/LB/Resource"
      }
    },
    "ServiceLBSecurityGroupF7435A5C": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB SpringbootfagateStackServiceLBAA44B5C1",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/LB/SecurityGroup/Resource"
      }
    },
    "ServiceLBSecurityGrouptoSpringbootfagateStackServiceSecurityGroup1E8D1DA5808026E1FE6D": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId"
          ]
        },
        "FromPort": 8080,
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/LB/SecurityGroup/to SpringbootfagateStackServiceSecurityGroup1E8D1DA5:8080"
      }
    },
    "ServiceLBPublicListener46709EAA": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ServiceLBE9A1ADBC"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/LB/PublicListener/Resource"
      }
    },
    "ServiceLBPublicListenerECSGroup0CC8688C": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "HealthCheckPath": "/actuator/health",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "ServiceTaskDefTaskRole0CFE2F57": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/TaskDef/TaskRole/Resource"
      }
    },
    "ServiceTaskDef1922A00F": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Essential": true,
            "Image": {
              "Fn::Sub": "739517360361.dkr.ecr.us-east-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-739517360361-us-east-2:ff2550bc9be79cc9e442034c887470f7152ffc420ea1519f998e6486e640b0a4"
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "ServiceTaskDefwebLogGroup2A898F61"
                },
                "awslogs-stream-prefix": "Service",
                "awslogs-region": "us-east-2"
              }
            },
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 8080,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "Cpu": "512",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefExecutionRole919F7BE3",
            "Arn"
          ]
        },
        "Family": "SpringbootfagateStackServiceTaskDef79E3CBF1",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "ServiceTaskDefTaskRole0CFE2F57",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/TaskDef/Resource"
      }
    },
    "ServiceTaskDefwebLogGroup2A898F61": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/TaskDef/web/LogGroup/Resource"
      }
    },
    "ServiceTaskDefExecutionRole919F7BE3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryPowerUser"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/TaskDef/ExecutionRole/Resource"
      }
    },
    "ServiceTaskDefExecutionRoleDefaultPolicy3073559D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ecr:us-east-2:739517360361:repository/cdk-hnb659fds-container-assets-739517360361-us-east-2"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ServiceTaskDefwebLogGroup2A898F61",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ServiceTaskDefExecutionRoleDefaultPolicy3073559D",
        "Roles": [
          {
            "Ref": "ServiceTaskDefExecutionRole919F7BE3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "Service9571FDD8": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "MyCluster4C1BA579"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 2,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 8080,
            "TargetGroupArn": {
              "Ref": "ServiceLBPublicListenerECSGroup0CC8688C"
            }
          }
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "ServiceSecurityGroupEEA09B68",
                  "GroupId"
                ]
              }
            ],
            "Subnets": [
              {
                "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E"
              },
              {
                "Ref": "MyVpcPrivateSubnet2Subnet0040C983"
              }
            ]
          }
        },
        "TaskDefinition": {
          "Ref": "ServiceTaskDef1922A00F"
        }
      },
      "DependsOn": [
        "ServiceLBPublicListenerECSGroup0CC8688C",
        "ServiceLBPublicListener46709EAA"
      ],
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/Service/Service"
      }
    },
    "ServiceSecurityGroupEEA09B68": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SpringbootfagateStack/Service/Service/SecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "MyVpcF9F0CA6F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/Service/SecurityGroup/Resource"
      }
    },
    "ServiceSecurityGroupfromSpringbootfagateStackServiceLBSecurityGroup1F1632CF808004B25926": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": {
          "Fn::GetAtt": [
            "ServiceSecurityGroupEEA09B68",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ServiceLBSecurityGroupF7435A5C",
            "GroupId"
          ]
        },
        "ToPort": 8080
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/Service/Service/SecurityGroup/from SpringbootfagateStackServiceLBSecurityGroup1F1632CF:8080"
      }
    },
    "SeisPipelineArtifactsBucketEncryptionKey4E58E30F": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::739517360361:root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "SeisPipelineArtifactsBucketEncryptionKeyAlias51BFAA9B": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-springbootfagatestackseispipeline7375353e",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "SeisPipelineArtifactsBucket3A51CEA9": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/ArtifactsBucket/Resource"
      }
    },
    "SeisPipelineArtifactsBucketPolicy04F54AD3": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "SeisPipelineArtifactsBucket3A51CEA9"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SeisPipelineArtifactsBucket3A51CEA9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SeisPipelineArtifactsBucket3A51CEA9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/ArtifactsBucket/Policy/Resource"
      }
    },
    "SeisPipelineRoleC04B6995": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Role/Resource"
      }
    },
    "SeisPipelineRoleDefaultPolicy2053021B": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SeisPipelineArtifactsBucket3A51CEA9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SeisPipelineArtifactsBucket3A51CEA9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineBuildSynthCodePipelineActionRole15A71DD3",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleCE3083A4",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":iam::",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":role/cdk-hnb659fds-deploy-role-",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "-",
                    {
                      "Ref": "AWS::Region"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SeisPipelineRoleDefaultPolicy2053021B",
        "Roles": [
          {
            "Ref": "SeisPipelineRoleC04B6995"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Role/DefaultPolicy/Resource"
      }
    },
    "SeisPipeline0FE706AE": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "SeisPipelineRoleC04B6995",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "cgxinyi",
                  "Repo": "CodeTest-Seis",
                  "Branch": "main",
                  "OAuthToken": "{{resolve:secretsmanager:github-oauth:SecretString:::}}",
                  "PollForSourceChanges": false
                },
                "Name": "GitHub",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "SeisPipelineBuildSynthCdkBuildProject9749751E"
                  },
                  "EnvironmentVariables": "[{\"name\":\"_PROJECT_CONFIG_HASH\",\"type\":\"PLAINTEXT\",\"value\":\"b0dac8357308bb70ab131cc795e1e73393937d1a39b3d7ef7388a51ca82330f4\"}]"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub"
                  }
                ],
                "Name": "Synth",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Build_Synth"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "SeisPipelineBuildSynthCodePipelineActionRole15A71DD3",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "SeisPipelineUpdatePipelineSelfMutation59CA0A11"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_Synth"
                  }
                ],
                "Name": "SelfMutate",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleCE3083A4",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "UpdatePipeline"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "StackName": "Deploy-Service",
                  "Capabilities": "CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND",
                  "RoleArn": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":iam::",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":role/cdk-hnb659fds-cfn-exec-role-",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "-",
                        {
                          "Ref": "AWS::Region"
                        }
                      ]
                    ]
                  },
                  "ActionMode": "CHANGE_SET_REPLACE",
                  "ChangeSetName": "PipelineChange",
                  "TemplatePath": "Artifact_Build_Synth::assembly-SpringbootfagateStack-Deploy/SpringbootfagateStackDeployService29C3FD00.template.json"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Build_Synth"
                  }
                ],
                "Name": "Service.Prepare",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "StackName": "Deploy-Service",
                  "ActionMode": "CHANGE_SET_EXECUTE",
                  "ChangeSetName": "PipelineChange"
                },
                "Name": "Service.Deploy",
                "RoleArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":role/cdk-hnb659fds-deploy-role-",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      "-",
                      {
                        "Ref": "AWS::Region"
                      }
                    ]
                  ]
                },
                "RunOrder": 2
              }
            ],
            "Name": "Deploy"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "SeisPipelineArtifactsBucket3A51CEA9"
          },
          "Type": "S3"
        },
        "Name": "SeisPipeline",
        "RestartExecutionOnUpdate": true
      },
      "DependsOn": [
        "SeisPipelineRoleDefaultPolicy2053021B",
        "SeisPipelineRoleC04B6995"
      ],
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Resource"
      }
    },
    "SeisPipelineSourceGitHubWebhookResource5A397556": {
      "Type": "AWS::CodePipeline::Webhook",
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:github-oauth:SecretString:::}}"
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}"
          }
        ],
        "TargetAction": "GitHub",
        "TargetPipeline": {
          "Ref": "SeisPipeline0FE706AE"
        },
        "TargetPipelineVersion": 1,
        "RegisterWithThirdParty": true
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Source/GitHub/WebhookResource"
      }
    },
    "SeisPipelineBuildSynthCodePipelineActionRole15A71DD3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::739517360361:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Build/Synth/CodePipelineActionRole/Resource"
      }
    },
    "SeisPipelineBuildSynthCodePipelineActionRoleDefaultPolicy6A503065": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineBuildSynthCdkBuildProject9749751E",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SeisPipelineBuildSynthCodePipelineActionRoleDefaultPolicy6A503065",
        "Roles": [
          {
            "Ref": "SeisPipelineBuildSynthCodePipelineActionRole15A71DD3"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Build/Synth/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "SeisPipelineBuildSynthCdkBuildProjectRoleECDFD109": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Build/Synth/CdkBuildProject/Role/Resource"
      }
    },
    "SeisPipelineBuildSynthCdkBuildProjectRoleDefaultPolicyA05E2860": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:739517360361:log-group:/aws/codebuild/",
                      {
                        "Ref": "SeisPipelineBuildSynthCdkBuildProject9749751E"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:739517360361:log-group:/aws/codebuild/",
                      {
                        "Ref": "SeisPipelineBuildSynthCdkBuildProject9749751E"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:us-east-2:739517360361:report-group/",
                    {
                      "Ref": "SeisPipelineBuildSynthCdkBuildProject9749751E"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SeisPipelineArtifactsBucket3A51CEA9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SeisPipelineArtifactsBucket3A51CEA9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SeisPipelineBuildSynthCdkBuildProjectRoleDefaultPolicyA05E2860",
        "Roles": [
          {
            "Ref": "SeisPipelineBuildSynthCdkBuildProjectRoleECDFD109"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Build/Synth/CdkBuildProject/Role/DefaultPolicy/Resource"
      }
    },
    "SeisPipelineBuildSynthCdkBuildProject9749751E": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "NPM_CONFIG_UNSAFE_PERM",
              "Type": "PLAINTEXT",
              "Value": "true"
            }
          ],
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "SeisPipelineBuildSynthCdkBuildProjectRoleECDFD109",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"pre_build\": {\n      \"commands\": [\n        \"cd springbootcdk\",\n        \"cd ../springbooteclipse && npm install -g aws-cdk typescript\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"mvn install && npm install\",\n        \"npx run cdk synth\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"springbootcdk/cdk.out\",\n    \"files\": \"**/*\"\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/Build/Synth/CdkBuildProject/Resource"
      }
    },
    "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleCE3083A4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::739517360361:root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/Resource"
      }
    },
    "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicy6A15388D": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineUpdatePipelineSelfMutation59CA0A11",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicy6A15388D",
        "Roles": [
          {
            "Ref": "SeisPipelineUpdatePipelineSelfMutateCodePipelineActionRoleCE3083A4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/Pipeline/UpdatePipeline/SelfMutate/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "SeisPipelineUpdatePipelineSelfMutationRole250543E1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/UpdatePipeline/SelfMutation/Role/Resource"
      }
    },
    "SeisPipelineUpdatePipelineSelfMutationRoleDefaultPolicyB3A380D8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:739517360361:log-group:/aws/codebuild/",
                      {
                        "Ref": "SeisPipelineUpdatePipelineSelfMutation59CA0A11"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:us-east-2:739517360361:log-group:/aws/codebuild/",
                      {
                        "Ref": "SeisPipelineUpdatePipelineSelfMutation59CA0A11"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:us-east-2:739517360361:report-group/",
                    {
                      "Ref": "SeisPipelineUpdatePipelineSelfMutation59CA0A11"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": [
                    "image-publishing",
                    "file-publishing",
                    "deploy"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "arn:*:iam::739517360361:role/*"
            },
            {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SeisPipelineArtifactsBucket3A51CEA9",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SeisPipelineArtifactsBucket3A51CEA9",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SeisPipelineUpdatePipelineSelfMutationRoleDefaultPolicyB3A380D8",
        "Roles": [
          {
            "Ref": "SeisPipelineUpdatePipelineSelfMutationRole250543E1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/UpdatePipeline/SelfMutation/Role/DefaultPolicy/Resource"
      }
    },
    "SeisPipelineUpdatePipelineSelfMutation59CA0A11": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "SeisPipelineUpdatePipelineSelfMutationRole250543E1",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"npm install -g aws-cdk\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cdk -a . deploy SpringbootfagateStack --require-approval=never --verbose\"\n      ]\n    }\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "SeisPipelineArtifactsBucketEncryptionKey4E58E30F",
            "Arn"
          ]
        },
        "Name": "SeisPipeline-selfupdate"
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/SeisPipeline/UpdatePipeline/SelfMutation/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACn1T227bMAz9lr4r6twNwx7npF0RrNgMp+ueZZl1FcuSoEuKwPC/j5Lt2OuGPvGQOrxTGc2yL/TD1Vf26ja8bq97ri3Q/uAZb0kJTgfLgeye1c/gTfAkdw48vjZCNWSnlfM2cB8JM3kgMVYP/Ib2T4bHp6diR4pQScEPoVKQ6AsqdfDwyCoJi32xYULNBfNCqws5grt9EcUP5u+Zh1d2JoUVJ4RL4L3yYBHPhLGSScs9tvjSgfLkADxY4c/3VgeTanjXcNdYcO4f814l+0CAO9rvZHCYPbJm+I3ZhsWuXHsLz0KJuae3Fq08Ewrsyjb5HsCexLiPCaZ0G8N8bNXR3BiccprWg2b1lkmmONRv3EEy5wWXyKgSA5d5wnX93zs18Ze+5gnsTU2cGa/eHzEzbmAe5EodiGAd7Us97j3JQqNfWtSIYnd2w+LNOXqreQt237EG0hXGN1qC0U54bc9b5oBI3eDwH3RzyTjjgXBdgxEGJM6W9sWEUrIV/g3Vi9btQNoOI32HVE0UuRQsbT2BgbiPtN8GLCnd2oRGsbSx1scKqiBkvaQvrD7C+IEmOAxkrjLeUd1eqvtlalzirOZ8vJa6jd8R0E1heHp016fsE80+0+zq6ITY2KC86ICWo/wDo3aaCfIDAAA="
      },
      "Metadata": {
        "aws:cdk:path": "SpringbootfagateStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "ServiceLoadBalancerDNSEC5B149E": {
      "Value": {
        "Fn::GetAtt": [
          "ServiceLBE9A1ADBC",
          "DNSName"
        ]
      }
    },
    "ServiceServiceURL250C0FB6": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "ServiceLBE9A1ADBC",
                "DNSName"
              ]
            }
          ]
        ]
      }
    },
    "loadBalancerUrl": {
      "Value": {
        "Fn::GetAtt": [
          "ServiceLBE9A1ADBC",
          "DNSName"
        ]
      },
      "Export": {
        "Name": "loadBalancerUrl"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}